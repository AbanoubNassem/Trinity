@using AbanoubNassem.Trinity.Configurations
@using InertiaCore
@addTagHelper *, MiniProfiler.AspNetCore.Mvc
@inject TrinityConfigurations Configurations
@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@{
#if DEBUG
    var isDebug = true;
    var path = Configurations.ViteUrl;
#else
    var isDebug = false;
    var path = $"/{Configurations.Prefix}/trinity/dist";
#endif
}

<!DOCTYPE html>
<html
    lang="@Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="stylesheet" type="text/css" href="@(path)/primeicons.css"/>
    <link id="theme-css" rel="stylesheet" type="text/css" href="@(path)/light-theme.css"/>

    @foreach (var style in Configurations.ExtraStyleSources)
    {
        <link rel="stylesheet" type="text/css" href="@style"/>
    }

    <link rel="icon" type="image/x-icon" href="@(path)/favicon.ico" inertia>
    <title inertia>@Configurations.Title</title>
</head>
<body dir="@(Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft ? "rtl" : "ltr")">

@await Inertia.Html(Model)
@Html.AntiForgeryToken()

@if (isDebug)
{
    <script type="module">
          import RefreshRuntime from '@Configurations.ViteUrl/@@react-refresh'
          RefreshRuntime.injectIntoGlobalHook(window)
          window.$RefreshReg$ = () => {}
          window.$RefreshSig$ = () => (type) => type
          window.__vite_plugin_react_preamble_installed__ = true
    </script>
    <script type="module" src="@Configurations.ViteUrl/@@vite/client"></script>
    <script type="module" src="@Configurations.ViteUrl/main.tsx"></script>
}
else
{
    <script type="module" src="@path/trinity.js" asp-append-version="true"></script>
}
<mini-profiler/>
@foreach (var js in Configurations.ExtraJavaScriptSources)
{
    <script type="module" src="@js"></script>
}
</body>
</html>