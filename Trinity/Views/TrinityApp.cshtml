@using AbanoubNassem.Trinity.Configurations
@using InertiaCore
@using StackExchange.Profiling
@addTagHelper *, MiniProfiler.AspNetCore.Mvc
@inject TrinityConfigurations Configurations

<!DOCTYPE html>
<html
    lang="@Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

    <link rel="stylesheet" type="text/css" href="~/@(Configurations.Prefix)/trinity/dist/style.css"/>
    <link id="theme-css" rel="stylesheet" type="text/css" href="~/@(Configurations.Prefix)/trinity/dist/light-theme.css"/>
    @foreach (var style in Configurations.ExtraStyleSources)
    {
        <link rel="stylesheet" type="text/css" href="@style"/>
    }

    <link rel="icon" type="image/x-icon" href="~/@(Configurations.Prefix)/trinity/dist/favicon.ico" inertia>
    <title inertia>@Configurations.Title</title>
</head>
<body dir="@(Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft ? "rtl" : "ltr")">

@await Inertia.Html(Model)
@Html.AntiForgeryToken()

<script type="module" crossorigin src="~/@(Configurations.Prefix)/trinity/dist/trinity-react.js"></script>
<mini-profiler/>
@foreach (var js in Configurations.ExtraJavaScriptSources)
{
    <script type="module" src="@js"></script>
}
</body>
</html>