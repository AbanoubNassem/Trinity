import Configs from '@/types/Models/Configs';
import TrinityResource from '@/types/Models/TrinityResource';
import React from 'react';
import { Toast } from 'primereact/toast';
import TrinityPage from '@/types/Models/Pages/TrinityPage';
import TrinityUser from '@/types/Models/TrinityUser';
import WidgetProps from '@/types/Props/Widgets/WidgetProps';
import TrinityWidget from '@/types/Models/Widgets/TrinityWidget';
import ColumnProps from '@/types/Props/Columns/ColumnProps';
import TrinityColumn from '@/types/Models/Columns/TrinityColumn';
import FieldProps from '@/types/Props/Fields/FieldProps';
import TrinityField from '@/types/Models/Fields/TrinityField';
import LayoutProps from '@/types/Props/Layouts/LayoutProps';
import TrinityLayout from '@/types/Models/Layouts/TrinityLayout';
import PageProps from '@/types/Props/Pages/PageProps';
export declare class TrinityApp {
    private static localizer;
    static configs: Configs;
    static user: TrinityUser;
    static resources: Array<TrinityResource>;
    static pages: {
        [key: string]: TrinityPage;
    };
    static registeredPages: Map<string, (props: any) => React.ReactNode>;
    static registeredComponents: Map<string, (props: any) => React.ReactNode>;
    static registeredColumns: Map<string, (props: any) => React.ReactNode>;
    static registeredWidgets: Map<string, (props: any) => React.ReactNode>;
    static toast?: Toast;
    static isRtl: boolean;
    static serving(callback: (app: typeof TrinityApp) => void): void;
    static init: (props: any) => void;
    private static loadDefaults;
    static registerComponent: (name: string, component: (props: any) => JSX.Element) => void;
    static registerLayout: (name: string, component: (props: LayoutProps<TrinityLayout | any>) => JSX.Element) => void;
    static registerField: (name: string, component: (props: FieldProps<TrinityField | any>) => JSX.Element) => void;
    static registerColumn: (name: string, component: (props: ColumnProps<TrinityColumn | any>) => JSX.Element) => void;
    static registerWidget: (name: string, component: (props: WidgetProps<TrinityWidget | any>) => JSX.Element) => void;
    static registerPage: (name: string, component: (props: PageProps<TrinityPage>) => JSX.Element) => void;
    static localize: (key: string, ...args: Array<string>) => string;
}
export default TrinityApp;
