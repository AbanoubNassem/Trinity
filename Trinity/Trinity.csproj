<Project Sdk="Microsoft.NET.Sdk.Razor">

    <PropertyGroup>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
        <AssemblyName>AbanoubNassem.Trinity</AssemblyName>
        <RootNamespace>AbanoubNassem.Trinity</RootNamespace>
        <TargetFrameworks>net6.0;net7.0</TargetFrameworks>
        <Version>0.0.8</Version>
        <Title>Trinity</Title>
        <Description>Trinity is a powerful Single-Page Application (SPA) administration tool that is designed to streamline common administrative tasks and enhance the productivity of developers. With its feature-rich and beautifully-designed interface, built using C# and ASP.NET, Trinity makes it easy to manage your website's backend with ease.</Description>
        <PackageProjectUrl>https://github.com/AbanoubNassem/Trinity</PackageProjectUrl>
        <PackageLicenseUrl>https://github.com/AbanoubNassem/Trinity/blob/main/LICENSE.md</PackageLicenseUrl>
        <RepositoryUrl>https://github.com/AbanoubNassem/Trinity</RepositoryUrl>
        <PackageTags>"trinity", "admin panel", "administration tool", "C#", "ASP.NET", "Dapper", "SqlKata", "FluentValidation", "MiniProfiler", "ReactJS", "PrimeReact", "InertiaJS", "Vite", "SPA"</PackageTags>
        <LangVersion>latestmajor</LangVersion>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <DocumentationFile>bin/Debug/Trinity.xml</DocumentationFile>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DocumentationFile>bin/Release/Trinity.xml</DocumentationFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AspNetCore.InertiaCore" Version="0.0.8" />
        <PackageReference Include="Dapper" Version="2.1.24" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="11.3.0" />
        <PackageReference Include="Humanizer.Core" Version="2.14.1" />
        <PackageReference Include="MiniProfiler.AspNetCore.Mvc" Version="4.3.8" />
        <PackageReference Include="SqlKata" Version="2.4.0" />
        <PackageReference Include="SqlKata.Execution" Version="2.4.0" />
        <PackageReference Include="Vite.AspNetCore" Version="1.11.0" />
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Include="wwwroot/**/**/**/*" Pack="false" />
    </ItemGroup>

    <ItemGroup Label="FilesToCopy">
        <None Include="Locales\**">
            <Pack>true</Pack>
            <PackageCopyToOutput>true</PackageCopyToOutput>
            <PackagePath>contentFiles\any\any\Locales;content\any\any\Locales</PackagePath>
        </None>
    </ItemGroup>


    <ItemGroup>
        <Watch Remove="wwwroot/**/*" />
    </ItemGroup>

    <ItemGroup>
        <Folder Include="wwwroot" />
    </ItemGroup>

    <!-- Ensure Node environment on Build -->
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build;PublishBuildAssets" Condition=" !Exists('node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <!-- Install Node packages -->
        <Exec Command="cd ../Trinity-React &amp;&amp; npm install" />
    </Target>
    
    <!-- Build the final assets -->
    <Target Name="PublishBuildAssets" BeforeTargets="BeforeBuild;" Condition=" '$(Configuration)' == 'Release' ">
        <!-- Build the final assets -->
        <Exec Command="cd ../Trinity-React &amp;&amp; npm run build" />
    </Target>
</Project>
